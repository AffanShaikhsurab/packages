--- packages/go_router/lib/src/route.dart
+++ packages/go_router/lib/src/route.dart
@@ -277,7 +277,7 @@ class GoRoute extends RouteBase {
         assert(onExit == null || pageBuilder != null || builder != null,
             'if onExit is provided, one of pageBuilder or builder must be provided'),
         super._() {
-      // cache the path regexp and parameters
+    // cache the path regexp and parameters
     _pathRE = patternToRegExp(path, pathParameters);
   }
 
@@ -323,7 +323,7 @@ class GoRoute extends RouteBase {
   ///
   /// See the [named routes example](https://github.com/flutter/packages/blob/main/packages/go_router/example/lib/named_routes.dart)
   /// for a complete runnable app.
- final String? name;
+  final String? name;
 
   /// The path of this go route.
   ///
@@ -432,9 +432,9 @@ class GoRoute extends RouteBase {
   final String? fragment;
 
   /// The optional fragment/hash component of the route.
-  /// 
-  /// This field allows specifying a fragment that will be appended to the route's URI, enabling navigation to a specific section within a page. If not provided, the URI will not include a fragment. 
-  /// 
+  ///
+  /// This field allows specifying a fragment that will be appended to the route's URI, enabling navigation to a specific section within a page. If not provided, the URI will not include a fragment.
+  ///
   /// Example usage:
   /// ```dart
   /// GoRouterState.of(context).namedLocation(
@@ -448,15 +448,15 @@ class GoRoute extends RouteBase {
 
   late final RegExp _pathRE;
 
-
   // TODO(chunhtai): move all regex related help methods to path_utils.dart.
   /// Match this route against a location.
   RegExpMatch? matchPatternAsPrefix(String loc) =>
       _pathRE.matchAsPrefix(loc) as RegExpMatch?;
-      
+
   /// Extract the path parameters from a match.
   Map<String, String> extractPathParams(RegExpMatch match) =>
       extractPathParameters(pathParameters, match);
+
   /// The path parameters in this route.
   @internal
   final List<String> pathParameters = <String>[];
@@ -470,6 +470,7 @@ class GoRoute extends RouteBase {
         FlagProperty('redirect', value: redirectOnly, ifTrue: 'Redirect Only'));
   }
 }
+
 /// Base class for classes that act as shells for sub-routes, such
 /// as [ShellRoute] and [StatefulShellRoute].
 abstract class ShellRouteBase extends RouteBase {
